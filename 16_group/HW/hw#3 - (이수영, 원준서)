// 12주차 과제 p532 16번 문제 16조(이수영, 원준서)

// Shape.h
class Shape {
protected:
	virtual void draw() = 0;
public:
	void paint();
};

// Shape.cpp
#include <iostream>
#include "Shape.h"
using namespace std;

void Shape::paint() {
	draw();
}

// Circle.h
class Circle : public Shape {
	virtual void draw();
};

// Circle.cpp
#include <iostream>
using  namespace std;

#include "Shape.h"
#include "Circle.h"

void Circle::draw() {
	cout << "Circle" << endl;
}

// Rect.h
class Rect : public Shape {
protected:
	virtual void draw();
};

// Rect.cpp
#include <iostream>
using namespace std;

#include "Shape.h"
#include "Rect.h"

void Rect::draw() {
	cout << "Rectangle" << endl;
}

// Line.h
class Line : public Shape {
protected:
	virtual void draw();
};

// Line.cpp
#include <iostream>
using namespace std;

#include "Shape.h"
#include "Line.h"

void Line::draw() {
	cout << "Line" << endl;
}

// Main.cpp
#include <iostream>
#include <vector>
#include <string>
#include "Shape.h"
#include "Line.h"
#include "Circle.h"
#include "Rect.h"
using namespace std;

int main() {
	vector<Shape*> v;		// 도형 객체를 삽입할 v
	vector<Shape*>::iterator it;
	int n;				// 각 메뉴별 항목 번호
	int selectN;			// 사용자가 선택한 항목 번호
	cout << "그래픽 에디터입니다." << endl;			// 기본 출력값
	
	while (true) {
		cout << "삽입:1, 삭제:2, 모두보기:3, 종료:4 >> ";				// 사용자가 선택한 번호를
		cin >> n;			// n에 입력받음
		if (n == 4)			// 종료:4 선택 시
			break;				// 프로그램 종료
		if (n == 1) {			// 삽입:1 선택 시
			cout << "선:1, 원:2, 사각형:3 >> ";			// 삽입할 도형 형태(type) 선택
			cin >> selectN;				// 선택한 도형 항목 번호(select Number)
			if (selectN == 1) {			// 선:1 선택 시
				v.push_back(new Line);			// 벡터 v에 Line 도형 객체 삽입(push_back)
			}
			if (selectN == 2) {			// 원:2 선택 시
				v.push_back(new Circle);			// 벡터 v에 Circle 도형 객체 삽입
			}
			if (selectN == 2) {			// 사각형:3 선택 시
				v.push_back(new Rect);			// 벡터 v에 Rect 도형 객체 삽입
			}
		}
		if (n == 2) {			// 삭제:2 선택 시
			cout << "삭제하고자 하는 도형의 인덱스 >> ";			// 삭제할 도형 인덱스 입력(선/원/사각형)
			cin >> selectN;				// 선택한 도형 항목 번호(select Number)
			it = v.begin();				// 벡터의 첫번째 탐색(v.begin())
			int i = 0;
			while (it != v.end()) {				// 벡터가 비어있지 않을 경우
				if (i == selectN) {			// 해당 인덱스와 도형 일치할 경우
					it = v.erase(it);			// 해당 인덱스의 도형 삭제
					break;
				}
				else {				// 해당 인덱스와 도형 불일치할 경우 계속 탐색
					it++;
					i++;
				}
			}
		}
		if (n == 3) {				// 모두보기:3 선택 시
			int i;
			for (it = v.begin(), i = 0; it != v.end(); it++, i++) {
				Shape* tmp = *it;
				cout << i << ": ";
				tmp->paint();
			}
		}
	}
	return 0;
}
