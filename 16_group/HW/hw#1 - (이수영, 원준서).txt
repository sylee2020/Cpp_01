2023-10-02(월) 5주차 과제 - P156 의 12번 문제를 프로그래밍하여 제출
hw#1 16조(이수영, 원준서)

1) 헤더파일 Ram.h 코드
2) cpp파일 Ram.cpp 코드
3) cpp파일 main.cpp 코드

4) cpp파일 main.cpp 콘솔창
5) cpp파일 main.cpp 읽기오류 코드+콘솔창
6) cpp파일 main.cpp 쓰기오류 코드+콘솔창

/******************** 1) 헤더파일 Ram.h ********************/
#ifndef RAM_H
#define RAM_H

class Ram {								// 컴퓨터의 주기억장치를 모델링하는 클래스
	char mem[100 * 1024];						// 100KB 메모리. 데이터가 기록될 메모리 공간
	int size;							// 크기 정보

public:
	Ram();								// mem 배열을 0으로 초기화하고 size를 100*1024로 초기화
	~Ram();								// "메모리 제거됨" 문자열 출력
	char read(int address);						// 주어진 address 주소로부터 데이터 읽기
	void write(int address, char value);				// 주어진 address 주소에 데이터 value를 한 바이트로 쓰기
};

#endif

/******************** 2) cpp파일 Ram.cpp ********************/
#include <iostream>
using namespace std;

#include "Ram.h"

Ram::Ram() {
	for (int address = 0; address < size; address++)		// 배열mem의 index는 0부터 size - 1
		mem[address] = 0;					// 메모리 mem 배열을 0으로 초기화하고,

	size = 100 * 1024;						// size를 100*1024로 초기화
}

Ram::~Ram() {								// 소멸자가 "메모리 제거됨" 문자열 출력
	cout << "메모리 제거됨";					// "메모리 제거됨" 문자열 출력
}

char Ram::read(int address) {						// address 주소의 메모리 바이트 리턴
	if (address >= 0 && address < size) {				// 주소로부터 데이터 읽기 완료
		return mem[address];
	}
	else {
		cout << "읽기 오류" << endl;				// 잘못된 주소로부터 데이터 읽기 못함
		return 0;						// 0 반환
	}
}

void Ram::write(int address, char value) {
	if (address >= 0 && address < size)				// 알맞은 주소
		mem[address] = value;					// 주소에 데이터 value 쓰기 완료
	else								// 잘못된 주소
		cout << "쓰기 오류" << endl;
}

/******************** 3) cpp파일 main.cpp ********************/
#include <iostream>
using namespace std;

#include "Ram.h"

int main() {
	Ram ram;

	ram.write(100, 20);						// 100 번지에 20 저장
	ram.write(101, 30);						// 101 번지에 30 저장
	char res = ram.read(100) + ram.read(101);			// 20 + 30 = 50

	ram.write(102, res);						// 102 번지에 50 저장
	cout << "102 번지의 값 = " << (int)ram.read(102) << endl;	// 102 번지 값 출력

	return 0;
}

/******************** 4) cpp파일 main.cpp 콘솔창 ********************/
102 번지의 값 = 50
메모리 제거됨
/******************** 5) cpp파일 main.cpp 읽기오류 ********************/
1) main.cpp의 char res = ram.read(100) + ram.read(101);의 100을 102400000000으로

2) cpp파일 main.cpp 콘솔창
읽기 오류
102 번지의 값 = 30
메모리 제거됨
/******************** 6) cpp파일 main.cpp 쓰기오류 ********************/
1) man.cpp의 ram.write(102, res);의 102를 10240000000000으로

2) cpp파일 main.cpp 콘솔창
쓰기 오류
102 번지의 값 = -52
메모리 제거됨